#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#
version: '3'

networks:
  ctso:
    external: true

services:
  ca_org1:
    hostname: ca.org1.citysurvey.gov
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca_org1.citysurvey.gov
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.citysurvey.gov-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/9803caa33867dccd92ec7bcc64c1ae5b47f88af39dbc938464eadabfe4d5306c_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/org1.citysurvey.gov/ca/:/etc/hyperledger/fabric-ca-server-config
    extra_hosts:
      - "ca.org1.citysurvey.gov:192.168.10.70"
    container_name: ca_org1
    networks:
      - ctso

  zookeeper0:
    image: hyperledger/fabric-zookeeper
    environment:
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
      - ZOO_MY_ID=1
    restart: always
    hostname: zookeeper0.citysurvey.gov

  zookeeper1:
    image: hyperledger/fabric-zookeeper
    environment:
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
      - ZOO_MY_ID=2
    restart: always
    hostname: zookeeper1.citysurvey.gov

  zookeeper2:
    image: hyperledger/fabric-zookeeper
    environment:
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
      - ZOO_MY_ID=3
    restart: always
    hostname: zookeeper2.citysurvey.gov

  kafka0:
    hostname: kafka0.citysurvey.gov
    image: hyperledger/fabric-kafka
    restart: always
    environment:
      - KAFKA_MESSAGE_MAX_BYTES=94371840          # 90 * 1024 * 1024 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=73400320    # 70 * 1024 * 1024 B
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_BROKER_ID=1
    ports:
      - 9092:9092
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2

  kafka1:
    hostname: kafka1.citysurvey.gov
    image: hyperledger/fabric-kafka
    restart: always
    environment:
      - KAFKA_MESSAGE_MAX_BYTES=94371840          # 90 * 1024 * 1024 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=73400320    # 70 * 1024 * 1024 B
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_BROKER_ID=2
    ports:
      - 9093:9093
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2

  kafka2:
    hostname: kafka2.citysurvey.gov
    image: hyperledger/fabric-kafka
    restart: always
    environment:
      - KAFKA_MESSAGE_MAX_BYTES=94371840          # 90 * 1024 * 1024 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=73400320    # 70 * 1024 * 1024 B
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_BROKER_ID=3
    ports:
      - 9094:9094
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2

  kafka3:
    hostname: kafka3.citysurvey.gov
    image: hyperledger/fabric-kafka
    restart: always
    environment:
      - KAFKA_MESSAGE_MAX_BYTES=94371840          # 90 * 1024 * 1024 B
      - KAFKA_REPLICA_FETCH_MAX_BYTES=73400320    # 70 * 1024 * 1024 B
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_BROKER_ID=4
    ports:
      - 9095:9095
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2

  orderer0:
    container_name: orderer0
    hostname: orderer0.citysurvey.gov
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/orderer0/msp
      # Enable TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/orderer0/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/orderer0/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/orderer0/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3
    volumes:
      - ./config/:/etc/hyperledger/configtx
      - ./crypto-config/ordererOrganizations/citysurvey.gov/orderers/orderer0.citysurvey.gov/msp:/etc/hyperledger/orderer0/msp
      - ./crypto-config/ordererOrganizations/citysurvey.gov/orderers/orderer0.citysurvey.gov/tls:/etc/hyperledger/orderer0/tls
      - orderer0.citysurvey.gov:/etc/hyperledger/production/orderer0

    deploy:
      mode: replicated
      replicas: 4
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints:
          - node.hostname == 192.168.10.70 

  orderer1:
    container_name: orderer1
    hostname: orderer1.citysurvey.gov
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/orderer1/msp
      # Enable TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/orderer1/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/orderer1/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/orderer1/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3
    volumes:
      - ./config/:/etc/hyperledger/configtx
      - ./crypto-config/ordererOrganizations/citysurvey.gov/orderers/orderer1.citysurvey.gov/msp:/etc/hyperledger/orderer1/msp
      - ./crypto-config/ordererOrganizations/citysurvey.gov/orderers/orderer1.citysurvey.gov/tls:/etc/hyperledger/orderer1/tls

    deploy:
      mode: replicated
      replicas: 4
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints:
          - node.hostname == 192.168.10.110

  orderer2:
    container_name: orderer2
    hostname: orderer2.citysurvey.gov
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/orderer2/msp
      # Enable TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/orderer2/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/orderer2/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/orderer2/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3
    volumes:
      - ./config/:/etc/hyperledger/configtx
      - ./crypto-config/ordererOrganizations/citysurvey.gov/orderers/orderer2.citysurvey.gov/msp:/etc/hyperledger/orderer2/msp
      - ./crypto-config/ordererOrganizations/citysurvey.gov/orderers/orderer2.citysurvey.gov/tls:/etc/hyperledger/orderer2/tls

    deploy:
      mode: replicated
      replicas: 4
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints:
          - node.hostname == 192.168.10.111

  orderer3:
    container_name: orderer3
    hostname: orderer3.citysurvey.gov
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/orderer3/msp
      # Enable TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/orderer3/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/orderer3/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/orderer3/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3
    volumes:
      - ./config/:/etc/hyperledger/configtx
      - ./crypto-config/ordererOrganizations/citysurvey.gov/orderers/orderer3.citysurvey.gov/msp:/etc/hyperledger/orderer3/msp
      - ./crypto-config/ordererOrganizations/citysurvey.gov/orderers/orderer3.citysurvey.gov/tls:/etc/hyperledger/orderer3/tls

    deploy:
      mode: replicated
      replicas: 4
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints:
          - node.hostname == 192.168.10.111

  peer0_org1:
    container_name: peer0_org1
    image: hyperledger/fabric-peer
    hostname: peer0.org1.citysurvey.gov
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.citysurvey.gov
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer0/msp
      - CORE_PEER_ADDRESS=peer0.org1.citysurvey.gov:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_ctso
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org1.citysurvey.gov/peers/peer0.org1.citysurvey.gov/msp:/etc/hyperledger/peer0/msp
      - ./crypto-config/peerOrganizations/org1.citysurvey.gov/users:/etc/hyperledger/peer0/users
      - ./config:/etc/hyperledger/configtx
    extra_hosts:
      - "orderer0.citysurvey.gov:192.168.10.70"
      - "orderer1.citysurvey.gov:192.168.10.110"
      - "orderer2.citysurvey.gov:192.168.10.111"
      - "orderer3.citysurvey.gov:192.168.10.112"
      - "peer1.org1.citysurvey.gov:192.168.10.110"
      - "peer2.org1.citysurvey.gov:192.168.10.111"
      - "peer3.org1.citysurvey.gov:192.168.10.112"
      - "ca.org1.citysurvey.gov:192.168.10.70"

    depends_on:
      - orderer0.citysurvey.gov
      - couchdb0
    networks:
      - ctso

  peer1_org1:
    container_name: peer1_org1
    image: hyperledger/fabric-peer
    hostname: peer1.org1.citysurvey.gov
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.citysurvey.gov
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer1/msp
      - CORE_PEER_ADDRESS=peer1.org1.citysurvey.gov:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_ctso
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org1.citysurvey.gov/peers/peer1.org1.citysurvey.gov/msp:/etc/hyperledger/peer1/msp
      - ./crypto-config/peerOrganizations/org1.citysurvey.gov/users:/etc/hyperledger/peer1/users
      - ./config:/etc/hyperledger/configtx

    extra_hosts:
      - "orderer0.citysurvey.gov:192.168.10.70"
      - "orderer1.citysurvey.gov:192.168.10.110"
      - "orderer2.citysurvey.gov:192.168.10.111"
      - "orderer3.citysurvey.gov:192.168.10.112"
      - "peer0.org1.citysurvey.gov:192.168.10.70"
      - "peer2.org1.citysurvey.gov:192.168.10.111"
      - "peer3.org1.citysurvey.gov:192.168.10.112"
      - "ca.org1.citysurvey.gov:192.168.10.70"

    depends_on:
      - orderer1.citysurvey.gov
      - couchdb1
    networks:
      - ctso

  peer2_org1:
    container_name: peer2_org1
    image: hyperledger/fabric-peer
    hostname: peer2.org1.citysurvey.gov
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer2.org1.citysurvey.gov
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer2/msp
      - CORE_PEER_ADDRESS=peer2.org1.citysurvey.gov:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_ctso
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org1.citysurvey.gov/peers/peer0.org1.citysurvey.gov/msp:/etc/hyperledger/peer2/msp
      - ./crypto-config/peerOrganizations/org1.citysurvey.gov/users:/etc/hyperledger/peer2/users
      - ./config:/etc/hyperledger/configtx

    extra_hosts:
      - "orderer0.citysurvey.gov:192.168.10.70"
      - "orderer1.citysurvey.gov:192.168.10.110"
      - "orderer2.citysurvey.gov:192.168.10.111"
      - "orderer3.citysurvey.gov:192.168.10.112"
      - "peer0.org1.citysurvey.gov:192.168.10.70"
      - "peer1.org1.citysurvey.gov:192.168.10.110"
      - "peer3.org1.citysurvey.gov:192.168.10.112"
      - "ca.org1.citysurvey.gov:192.168.10.70"

    depends_on:
      - orderer2.citysurvey.gov
      - couchdb2
    networks:
      - ctso

  peer3_org1:
    container_name: peer3_org1
    image: hyperledger/fabric-peer
    hostname: peer3.org1.citysurvey.gov
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer3.org1.citysurvey.gov
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer3/msp
      - CORE_PEER_ADDRESS=peer3.org1.citysurvey.gov:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_ctso
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org1.citysurvey.gov/peers/peer3.org1.citysurvey.gov/msp:/etc/hyperledger/peer3/msp
      - ./crypto-config/peerOrganizations/org1.citysurvey.gov/users:/etc/hyperledger/peer3/users
      - ./config:/etc/hyperledger/configtx

    extra_hosts:
      - "orderer0.citysurvey.gov:192.168.10.70"
      - "orderer1.citysurvey.gov:192.168.10.110"
      - "orderer2.citysurvey.gov:192.168.10.111"
      - "orderer3.citysurvey.gov:192.168.10.112"
      - "peer0.org1.citysurvey.gov:192.168.10.70"
      - "peer1.org1.citysurvey.gov:192.168.10.110"
      - "peer2.org1.citysurvey.gov:192.168.10.111"
      - "ca.org1.citysurvey.gov:192.168.10.70"

    depends_on:
      - orderer3.citysurvey.gov
      - couchdb3
    networks:
      - ctso

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - ctso

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - ctso

  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - ctso

  couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - ctso

  cli:
    container_name: cli
    image: hyperledger/fabric-tools
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=info
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.citysurvey.gov:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.citysurvey.gov/users/Admin@org1.citysurvey.gov/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
    networks:
        - ctso
    #depends_on:
    #  - orderer.citysurvey.gov
    #  - peer0.org1.citysurvey.gov
    #  - couchdb
